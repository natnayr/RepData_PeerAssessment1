rotation    <- c(58.64,-243.02,1,1.03,0.41,0.43,-0.72,0.67)
rings       <- c(FALSE,FALSE,FALSE,FALSE,TRUE,TRUE,TRUE,TRUE)
# Create the data frame:
planets_df  <- data.frame(planets, type, diameter, rotation, rings)
planets_df
library(gdata)
planets     <- c("Mercury","Venus","Earth","Mars","Jupiter","Saturn","Uranus","Neptune")
type        <- c("Terrestrial planet","Terrestrial planet","Terrestrial planet","Terrestrial planet","Gas giant","Gas giant","Gas giant","Gas giant")
diameter    <- c(0.382,0.949,1,0.532,11.209,9.449,4.007,3.883)
rotation    <- c(58.64,-243.02,1,1.03,0.41,0.43,-0.72,0.67)
rings       <- c(FALSE,FALSE,FALSE,FALSE,TRUE,TRUE,TRUE,TRUE)
# Create the data frame:
planets_df  <- data.frame(planets, type, diameter, rotation, rings)
planets_df
rings       <- c(FALSE,FALSE,FALSE,FALSE,TRUE,TRUE,TRUE)
# Create the data frame:
planets_df  <- data.frame(planets, type, diameter, rotation, rings)
planets_df
library(gdata)
planets     <- c("Mercury","Venus","Earth","Mars","Jupiter","Saturn","Uranus","Neptune")
type        <- c("Terrestrial planet","Terrestrial planet","Terrestrial planet","Terrestrial planet","Gas giant","Gas giant","Gas giant","Gas giant")
diameter    <- c(0.382,0.949,1,0.532,11.209,9.449,4.007,3.883)
rotation    <- c(58.64,-243.02,1,1.03,0.41,0.43,-0.72,0.67)
rings       <- c(FALSE,FALSE,FALSE,FALSE,TRUE,TRUE,TRUE)
# Create the data frame:
planets_df  <- data.frame(planets, type, diameter, rotation, rings)
planets_df
rings       <- c(FALSE,FALSE,FALSE,FALSE,TRUE,TRUE,TRUE)
# Create the data frame:
planets_df  <- data.frame(planets, type, diameter, rotation, rings)
library(gdata)
planets     <- c("Mercury","Venus","Earth","Mars","Jupiter","Saturn","Uranus","Neptune")
type        <- c("Terrestrial planet","Terrestrial planet","Terrestrial planet","Terrestrial planet","Gas giant","Gas giant","Gas giant","Gas giant")
diameter    <- c(0.382,0.949,1,0.532,11.209,9.449,4.007,3.883)
rotation    <- c(58.64,-243.02,1,1.03,0.41,0.43,-0.72,0.67)
rings       <- c(FALSE,FALSE,FALSE,FALSE,TRUE,TRUE,TRUE)
# Create the data frame:
planets_df  <- data.frame(planets, type, diameter, rotation, rings)
planets_df
library(gdata)
planets     <- c("Mercury","Venus","Earth","Mars","Jupiter","Saturn","Uranus","Neptune")
type        <- c("Terrestrial planet","Terrestrial planet","Terrestrial planet","Terrestrial planet","Gas giant","Gas giant","Gas giant","Gas giant")
diameter    <- c(0.382,0.949,1,0.532,11.209,9.449,4.007,3.883)
rotation    <- c(58.64,-243.02,1,1.03,0.41,0.43,-0.72)
rings       <- c(FALSE,FALSE,FALSE,FALSE,TRUE,TRUE,TRUE)
# Create the data frame:
planets_df  <- data.frame(planets, type, diameter, rotation, rings)
planets_df
library(gdata)
planets     <- c("Mercury","Venus","Earth","Mars","Jupiter","Saturn","Uranus","Neptune")
type        <- c("Terrestrial planet","Terrestrial planet","Terrestrial planet","Terrestrial planet","Gas giant","Gas giant","Gas giant","Gas giant")
diameter    <- c(0.382,0.949,1,0.532,11.209,9.449,4.007,3.883)
rotation    <- c(58.64,-243.02,1,1.03,0.41,0.43,-0.72)
rings       <- c(FALSE,FALSE,FALSE,FALSE,TRUE,TRUE,TRUE)
# Create the data frame:
planets_df  <- data.frame(planets, type, diameter, rotation, rings)
planets_df
library(gdata)
planets     <- c("Mercury","Venus","Earth","Mars","Jupiter","Saturn","Uranus","Neptune")
type        <- c("Terrestrial planet","Terrestrial planet","Terrestrial planet","Terrestrial planet","Gas giant","Gas giant","Gas giant","Gas giant")
diameter    <- c(0.382,0.949,1,0.532,11.209,9.449,4.007,3.883)
rotation    <- c(58.64,-243.02,1,1.03,0.41,0.43,-0.72)
rings       <- c(FALSE,FALSE,FALSE,FALSE,TRUE,TRUE,TRUE)
# Create the data frame:
planets_df  <- data.frame(planets, type, diameter, rotation, rings)
planets_df
library(gdata)
planets     <- c("Mercury","Venus","Earth","Mars","Jupiter","Saturn","Uranus","Neptune")
type        <- c("Terrestrial planet","Terrestrial planet","Terrestrial planet","Terrestrial planet","Gas giant","Gas giant","Gas giant","Gas giant")
diameter    <- c(0.382,0.949,1,0.532,11.209,9.449,4.007,3.883)
rotation    <- c(58.64,-243.02,1,1.03,0.41,0.43,-0.72)
rings       <- c(FALSE,FALSE,FALSE,FALSE,TRUE,TRUE,TRUE)
# Create the data frame:
planets_df  <- data.frame(planets, type, diameter, rotation, rings)
planets_df
library(gdata)
planets     <- c("Mercury","Venus","Earth","Mars","Jupiter","Saturn","Uranus","Neptune")
type        <- c("Terrestrial planet","Terrestrial planet","Terrestrial planet","Terrestrial planet","Gas giant","Gas giant","Gas giant","Gas giant")
diameter    <- c(0.382,0.949,1,0.532,11.209,9.449,4.007,3.883)
rotation    <- c(58.64,-243.02,1,1.03,0.41,0.43,-0.72)
rings       <- c(FALSE,FALSE,FALSE,FALSE,TRUE,TRUE,TRUE)
# Create the data frame:
planets_df  <- data.frame(planets, type, diameter, rotation, rings)
planets_df
library(gdata)
planets     <- c("Mercury","Venus","Earth","Mars","Jupiter","Saturn","Uranus","Neptune")
type        <- c("Terrestrial planet","Terrestrial planet","Terrestrial planet","Terrestrial planet","Gas giant","Gas giant","Gas giant","Gas giant")
diameter    <- c(0.382,0.949,1,0.532,11.209,9.449,4.007,3.883)
rotation    <- c(58.64,-243.02,1,1.03,0.41,0.43,-0.72)
rings       <- c(FALSE,FALSE,FALSE,FALSE,TRUE,TRUE,TRUE)
# Create the data frame:
planets_df  <- data.frame(planets, type, diameter, rotation, rings)
planets_df
library(gdata)
planets     <- c("Mercury","Venus","Earth","Mars","Jupiter","Saturn","Uranus","Neptune")
type        <- c("Terrestrial planet","Terrestrial planet","Terrestrial planet","Terrestrial planet","Gas giant","Gas giant","Gas giant","Gas giant")
diameter    <- c(0.382,0.949,1,0.532,11.209,9.449,4.007,3.883)
rotation    <- c(58.64,-243.02,1,1.03,0.41,0.43,-0.72)
rings       <- c(FALSE,FALSE,FALSE,FALSE,TRUE,TRUE,TRUE)
# Create the data frame:
planets_df  <- data.frame(planets, type, diameter, rotation, rings)
planets_df
library(gdata)
planets     <- c("Mercury","Venus","Earth","Mars","Jupiter","Saturn","Uranus","Neptune")
type        <- c("Terrestrial planet","Terrestrial planet","Terrestrial planet","Terrestrial planet","Gas giant","Gas giant","Gas giant","Gas giant")
diameter    <- c(0.382,0.949,1,0.532,11.209,9.449,4.007,3.883)
rotation    <- c(58.64,-243.02,1,1.03,0.41,0.43,-0.72)
rings       <- c(FALSE,FALSE,FALSE,FALSE,TRUE,TRUE,TRUE)
# Create the data frame:
planets_df  <- data.frame(planets, type, diameter, rotation, rings)
planets_df
library(gdata)
planets     <- c("Mercury","Venus","Earth","Mars","Jupiter","Saturn","Uranus","Neptune")
type        <- c("Terrestrial planet","Terrestrial planet","Terrestrial planet","Terrestrial planet","Gas giant","Gas giant","Gas giant","Gas giant")
diameter    <- c(0.382,0.949,1,0.532,11.209,9.449,4.007,3.883)
rotation    <- c(58.64,-243.02,1,1.03,0.41,0.43,-0.72)
rings       <- c(FALSE,FALSE,FALSE,FALSE,TRUE,TRUE,TRUE)
# Create the data frame:
planets_df  <- data.frame(planets, type, diameter, rotation, rings)
planets_df
library(gdata)
planets     <- c("Mercury","Venus","Earth","Mars","Jupiter","Saturn","Uranus","Neptune")
type        <- c("Terrestrial planet","Terrestrial planet","Terrestrial planet","Terrestrial planet","Gas giant","Gas giant","Gas giant","Gas giant")
diameter    <- c(0.382,0.949,1,0.532,11.209,9.449,4.007,3.883)
rotation    <- c(58.64,-243.02,1,1.03,0.41,0.43,-0.72)
rings       <- c(FALSE,FALSE,FALSE,FALSE,TRUE,TRUE,TRUE)
# Create the data frame:
planets_df  <- data.frame(planets, type, diameter, rotation, rings)
planets_df
library(gdata)
planets     <- c("Mercury","Venus","Earth","Mars","Jupiter","Saturn","Uranus","Neptune")
type        <- c("Terrestrial planet","Terrestrial planet","Terrestrial planet","Terrestrial planet","Gas giant","Gas giant","Gas giant","Gas giant")
diameter    <- c(0.382,0.949,1,0.532,11.209,9.449,4.007,3.883)
rotation    <- c(58.64,-243.02,1,1.03,0.41,0.43,-0.72)
rings       <- c(FALSE,FALSE,FALSE,FALSE,TRUE,TRUE,TRUE)
# Create the data frame:
planets_df  <- data.frame(planets, type, diameter, rotation, rings)
planets_df
y <- c(1.7, "a")
y <- c(TRUE, 2)
y <- c(1.7, "a")
> y <- c(TRUE, 2)
y <- c(TRUE, 2)
as.character(y)
as.logical(y)
x <- c("a","b","c")
as.logical(x)
as.complex(x)
as.numeric(x)
as.complex(x)
m <- matrix(1:10)
m
m <- matrix(1:10, nrow=3, ncol=4)
m <- matrix(1:9, nrow=3, ncol=3)
m
m <- matrix(1:9, brow=TRUE, nrow=3, ncol=3)
!matrix
?matrix
m <- matrix(1:9, byrow=TRUE, nrow=3, ncol=3)
m
class(x)
x <- 4
class(x)
as.integer(x)
class(x)
xL
x <- as.integer(4)
x
class(x)
x <- c(4, TRUE)
class(x)
x <- c(1,3,5)
y <- c(3,2,10)
cbind(x,y)
z <- cbind(x,y)
dim(z)
x <- list(2,"a","b",TRUE)
x[[1]]
class(x[[1]])
x <- 1:4
x <- 1:4
y <- 2:3
x+y
class(x+y)
load("~/Downloads/hw1_data.csv")
hw1_data <- read.csv("~/Downloads/hw1_data.csv")
View(hw1_data)
x <- c(17,14,4,5,13,12,10)
x[x==4] > 10
x[x>11] <- 4
x
x <- c(17,14,4,5,13,12,10)
x[x>11]
read.csv(hw1_data)
read.csv()
read.csv(file = hw1_data)
read.csv(file = "hw1_data")
?list
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
?data
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
mean <- 10
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
R.version.string
R.version.string
swirl
??swirl
?swirl
install.packages("swirl")
library(swirl)
?matrix
matrix(c(1,2,3,4,5,6,7,8,9), nrow=3, ncol=3)
dis <- matrix(c(1,2,3,4,5,6,7,8,9), nrow=3, ncol=3)
solve dis
solve(dis)
dis <- matrix(c(1,0,0,0,1,0,0,0,1), nrow=3, ncol=3)
solve(dis)
cacheSolve(dis)
cacheSolve(dis)
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
cacheSolve(dis)
dis
cacheSolve(dis)
solve(dis)
makeCacheMatrix(dis)
cacheSolve(dis)
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
?solve
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
dis
makeCacheMatrix(dis)
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
makeCacheMatrix(dis)
dis
makeCacheMatrix(dis)
cacheSolve(dis)
cacheSolve(makeCacheMatrix(dis))
cacheSolve(makeCacheMatrix(dis))
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
cacheSolve(makeCacheMatrix(dis))
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
source('~/Dropbox/IDA MOOC Course/Course Workspace/R-Programming/Ass2/cachematrix.R')
cacheSolve(makeCacheMatrix(dis))
install.packages("swirl")
install.packages("swirl")
library(swirl)
swirl()
5 + 7
x <- 5 + 7
xx
x
y<- x -3
y
c(1.1, 9, 3.14)
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt()
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z * 2 + 1000
my_div
swirl
install_from_swirl("R Programming")
install_from_swirl("R Programming")
swirl()
swirl()
0
quit
leave
exit
quit()
library(swirl)
swirl()
bye()
install.packages("swirl")
install.packages("swirl")
install_from_swirl("R Programming")
library(swirl)
swirl()
c(44, NA, 5, NA)
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(mydata)
my_na <- is.na(my_data)
my_na
my_data == NA
sum()
sum(my_na)
my_na
sum(my_na)
my_data
0/0
Inf-Inf
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
5 == 7
!(5 == 7 )
FALSE && FALSE
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 !- 8 && 4 > 3.9
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins','twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(c(ints > 7))
which(ints > 7)
any(ints <= 0)
any(ints < 0)
all(int > 0)
all(ints > 0)
head(flags)
dim(flags)
class(flags)
bye()
swirl()
info()
main()
sample()
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips <- sample(c(1,0),100)
flips <- sample(c(0,1),100)
flips <- sample(c(0,1),100, replace = TRUE, prob = c(0.3,0.7))
flips
sum(flips)
rbinom(flips)
?rbinom
bye
bye()
swirl
swirl()
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$speed, y=cars$dist)
plot(x=cars$dist, y=cars$speed)
plot(x=cars$speed, y=cars$dist, xlab="Speed")
plot(x=cars$speed, y=cars$dist, ylab="Stopping Distance")
plot(x=cars$speed, y=cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(cars, main="My Plot")
plot(cars, sub="My Plot Subtitle")
plot(cars, col=2)
plot(cars, xlim= c(10,15))
plot(cars, pch=2
)
data(mtcars)
?boxplot()
?boxplot
boxplot(mtcars, fomula= mycars$mpg~mtcars$cyl)
boxplot(fomula=mpg~cyl, data = mtcars)
boxplot(fomula = mpg ~ cyl, data = mtcars)
boxplot.formula(fomula = mpg ~ cyl, data = mtcars)
boxplot(formula = mpg ~ cyl, data = mtcars)
hist
hist(mtcars$mpg)
bye
rpois(5, 2)
set.seed(1)
rpois(5,2)
set.seed(1)
rpois(5,2)
set.seed(1)
rpois(5,2)
?rnorm
?rpois
?dpois
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
bye()
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
x
y
x
x
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
x
y
z
e
?rnorm
y
sample.interval=10000
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
set.seed(1)
rpois(5,2)
set.seed(1)
rpois(5,2)
library(swirl)
swirl()
ymd("1989-05-17")
mydaymd("1989-05-17")
bye()
bye
asds
raw_data
raw_data
library('knitr')
library('knitr')
Sys.setenv(TZ='GMT')
echo=TRUE
#read csv data
raw_data <- read.csv(file="activity.csv", header=TRUE, colClasses=c("integer","Date","factor"))
#remove NAs from step
filled_data <- raw_data[complete.cases(raw_data),]
#formating datetime column
filled_data$date <- strptime(filled_data$date, format='%Y-%m-%d')
raw_data <- read.csv(file="activity.csv", header=TRUE, colClasses=c("integer","Date","factor"))
setwd("Dropbox/IDA MOOC Course/Course Workspace/ReproducibleResearch/workspace/PeerAssessment1/")
raw_data
read csv data
raw_data <- read.csv(file="activity.csv", header=TRUE, colClasses=c("integer","Date","factor"))
#remove NAs from step
filled_data <- raw_data[complete.cases(raw_data),]
#formating datetime column
filled_data$date <- strptime(filled_data$date, format='%Y-%m-%d')
raw_data
